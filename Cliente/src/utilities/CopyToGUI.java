/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package utilities;

import java.io.File;
import java.io.IOException;
import java.nio.file.AccessDeniedException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;

/**
 *
 * @author erome
 */
public class CopyToGUI extends javax.swing.JFrame {

    private static boolean MODE_FOLDERS = false;
    private static boolean MODE_FILES_FOLDERS = true;
    
    private File folder;
    
    private void searchInFolder(String selectedFolder, boolean mode){
        folder = new File(selectedFolder);
        DefaultListModel model = new DefaultListModel();
        this.txtFolder.setText(folder.getAbsolutePath());
        if(folder.isDirectory()){ //si mode es false solo se tendra en cuenta si es directorio, si es true valdra todo
            for(File fold : folder.listFiles()){
                if(fold.isDirectory() || mode)
                    model.addElement(fold.getName());
            }
        }else{//si el ultimo seleccionado es un fichero:
            //hemos llegado al final, este es el archivo elegido
        }
        this.listFolder.setModel(model);
    }
    
    private void getDiscPartitions(){
        File[] drives = File.listRoots();
        if (drives != null && drives.length > 0) {
            DefaultComboBoxModel model = new DefaultComboBoxModel();
            for (File aDrive : drives) {
                model.addElement(aDrive.getPath());
            }
            this.cboxPartitions.setModel(model);
        }
    }
    
    /**
     * Creates new form CopyToGUI
     */
    public CopyToGUI() {
        initComponents();
        getDiscPartitions();
        searchInFolder(System.getProperty("user.home"), myMode);
    }
    
    private File copyFromPath;
    private String myFileName;
    private boolean myMode;
    public CopyToGUI(String copyFromPath) {
        this();
        this.copyFromPath = new File(copyFromPath);
        myFileName = this.copyFromPath.getName();
        myMode = MODE_FOLDERS;
    }
    
    private File copyToPath;
    public CopyToGUI(String copyToPath, String saveName) {
        this();
        this.copyToPath = new File(copyToPath);
        myFileName = saveName;
        myMode = MODE_FILES_FOLDERS;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPanel = new javax.swing.JPanel();
        txtFolder = new RSMaterialComponent.RSTextFieldMaterialIcon();
        btnSave = new RSMaterialComponent.RSButtonIconOne();
        jScrollPane1 = new javax.swing.JScrollPane();
        listFolder = new javax.swing.JList<>();
        btnNewFolder = new RSMaterialComponent.RSButtonIconTwo();
        btnUpper = new RSMaterialComponent.RSButtonIconTwo();
        cboxPartitions = new RSMaterialComponent.RSComboBoxMaterial();
        btnClose = new RSMaterialComponent.RSButtonIconOne();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        MainPanel.setBackground(new java.awt.Color(50, 51, 52));
        MainPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(239, 96, 0), 2));

        txtFolder.setEditable(false);
        txtFolder.setForeground(new java.awt.Color(239, 96, 0));
        txtFolder.setColorIcon(new java.awt.Color(239, 96, 0));
        txtFolder.setColorMaterial(new java.awt.Color(239, 96, 0));
        txtFolder.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.FOLDER_OPEN);
        txtFolder.setPhColor(new java.awt.Color(239, 96, 0));
        txtFolder.setPlaceholder("Choose a Folder");

        btnSave.setBackground(new java.awt.Color(239, 96, 0));
        btnSave.setBackgroundHover(new java.awt.Color(255, 137, 25));
        btnSave.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.SAVE);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        listFolder.setBackground(new java.awt.Color(102, 102, 102));
        listFolder.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(239, 96, 0), 2));
        listFolder.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        listFolder.setForeground(new java.awt.Color(255, 255, 255));
        listFolder.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listFolder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listFolderMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listFolder);

        btnNewFolder.setBackground(new java.awt.Color(239, 96, 0));
        btnNewFolder.setToolTipText("New Folder");
        btnNewFolder.setBackgroundHover(new java.awt.Color(255, 137, 25));
        btnNewFolder.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.FOLDER);

        btnUpper.setBackground(new java.awt.Color(239, 96, 0));
        btnUpper.setToolTipText("Upper Folder");
        btnUpper.setBackgroundHover(new java.awt.Color(255, 137, 25));
        btnUpper.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.ARROW_UPWARD);
        btnUpper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpperActionPerformed(evt);
            }
        });

        cboxPartitions.setColorMaterial(new java.awt.Color(239, 96, 0));
        cboxPartitions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxPartitionsActionPerformed(evt);
            }
        });

        btnClose.setBackground(new java.awt.Color(204, 0, 0));
        btnClose.setBackgroundHover(new java.awt.Color(255, 0, 0));
        btnClose.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.CLOSE);
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(MainPanelLayout.createSequentialGroup()
                                .addComponent(txtFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addComponent(btnNewFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboxPartitions, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNewFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboxPartitions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpperActionPerformed
        searchInFolder(folder.getParent(), myMode);
    }//GEN-LAST:event_btnUpperActionPerformed

    private void cboxPartitionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxPartitionsActionPerformed
        searchInFolder(cboxPartitions.getSelectedItem().toString(), myMode);
    }//GEN-LAST:event_cboxPartitionsActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void listFolderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listFolderMouseClicked
        searchInFolder(folder.getAbsolutePath()+"/"+listFolder.getSelectedValue(), myMode);
    }//GEN-LAST:event_listFolderMouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            if(!myMode){
                File endPath = new File((folder.getAbsolutePath()+"\\client.key"));
                Files.copy(copyFromPath.toPath(), endPath.toPath(), StandardCopyOption.REPLACE_EXISTING);
            }else{
                Files.copy(folder.getAbsoluteFile().toPath(), new File(copyToPath+"\\"+myFileName).toPath(), StandardCopyOption.REPLACE_EXISTING);
            }
            this.dispose();
        } catch (AccessDeniedException ex){
            MsgBox.create(this,"Could Not Complete the Copy, Check if file exists in selected folder", MsgBox.ERROR_ICON).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(CopyToGUI.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CopyToGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CopyToGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CopyToGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CopyToGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CopyToGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MainPanel;
    private RSMaterialComponent.RSButtonIconOne btnClose;
    private RSMaterialComponent.RSButtonIconTwo btnNewFolder;
    private RSMaterialComponent.RSButtonIconOne btnSave;
    private RSMaterialComponent.RSButtonIconTwo btnUpper;
    private RSMaterialComponent.RSComboBoxMaterial cboxPartitions;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listFolder;
    private RSMaterialComponent.RSTextFieldMaterialIcon txtFolder;
    // End of variables declaration//GEN-END:variables
}
