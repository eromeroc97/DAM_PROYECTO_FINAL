/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation;

import domain.RegistredUser;
import java.awt.Toolkit;
import java.text.SimpleDateFormat;
import java.util.LinkedList;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import utilities.MsgBox;
import utilities.MsgConfirmation;
import utilities.PropertiesController;

/**
 *
 * @author erome
 */
public class AdminUsersGUI extends javax.swing.JFrame {

    /**
     * Creates new form UserAdminGUI
     */
    public AdminUsersGUI() {
        initComponents();
        setProgramIcon();
    }
    
    private void setProgramIcon(){
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("resources/client_icon_32.png")));
    }
    
    private JFrame parent;
    private RegistredUser myUser;
    public AdminUsersGUI(JFrame parent, RegistredUser myUser) {
        this();
        this.parent = parent;
        this.myUser = myUser;
        
        this.parent.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPanel = new javax.swing.JPanel();
        lblAdminUsers = new RSMaterialComponent.RSLabelTextIcon();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsers = new RSMaterialComponent.RSTableMetroCustom();
        btnClose = new RSMaterialComponent.RSButtonIconOne();
        btnCreateUser = new RSMaterialComponent.RSButtonMaterialIconOne();
        btnDeleteUser = new RSMaterialComponent.RSButtonMaterialIconOne();
        btnUpdateList = new RSMaterialComponent.RSButtonIconOne();
        btnNewPassword = new RSMaterialComponent.RSButtonMaterialIconOne();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        MainPanel.setBackground(new java.awt.Color(50, 51, 52));

        lblAdminUsers.setForeground(new java.awt.Color(239, 96, 0));
        lblAdminUsers.setText("Administrate Users");

        tblUsers.setAutoCreateRowSorter(true);
        tblUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblUsers.setBackgoundHead(new java.awt.Color(239, 96, 0));
        tblUsers.setBackgoundHover(new java.awt.Color(255, 137, 25));
        tblUsers.setColorPrimaryText(new java.awt.Color(0, 0, 0));
        tblUsers.setColorSecundaryText(new java.awt.Color(0, 0, 0));
        tblUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUsers);

        btnClose.setBackground(new java.awt.Color(204, 0, 0));
        btnClose.setBackgroundHover(new java.awt.Color(255, 0, 0));
        btnClose.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.CLOSE);
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnCreateUser.setBackground(new java.awt.Color(239, 96, 0));
        btnCreateUser.setText("Create User");
        btnCreateUser.setBackgroundHover(new java.awt.Color(255, 137, 25));
        btnCreateUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnCreateUser.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.ADD);
        btnCreateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateUserActionPerformed(evt);
            }
        });

        btnDeleteUser.setBackground(new java.awt.Color(239, 96, 0));
        btnDeleteUser.setBackgroundHover(new java.awt.Color(255, 137, 25));
        btnDeleteUser.setEnabled(false);
        btnDeleteUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnDeleteUser.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.DELETE);
        btnDeleteUser.setInheritsPopupMenu(true);
        btnDeleteUser.setLabel("Delete User");
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });

        btnUpdateList.setBackground(new java.awt.Color(239, 96, 0));
        btnUpdateList.setBackgroundHover(new java.awt.Color(255, 137, 25));
        btnUpdateList.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.REFRESH);
        btnUpdateList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateListActionPerformed(evt);
            }
        });

        btnNewPassword.setBackground(new java.awt.Color(239, 96, 0));
        btnNewPassword.setText("New Password");
        btnNewPassword.setBackgroundHover(new java.awt.Color(255, 137, 25));
        btnNewPassword.setEnabled(false);
        btnNewPassword.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnNewPassword.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.LOCK);
        btnNewPassword.setInheritsPopupMenu(true);
        btnNewPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                .addGap(0, 53, Short.MAX_VALUE)
                .addComponent(lblAdminUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addComponent(btnUpdateList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCreateUser, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblAdminUsers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUpdateList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDeleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnCreateUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.parent.setEnabled(true);
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        setLanguageUI();
        fillUserTable(createTableModel());
    }//GEN-LAST:event_formWindowOpened
    
    private int selectedRow = -1;
    private void tblUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsersMouseClicked
        if(tblUsers.getSelectedRow() != selectedRow){
            selectedRow = tblUsers.getSelectedRow();
            //comprobar el usuario
            String user = (String) tblUsers.getValueAt(selectedRow, 1); //username
            boolean online = ((String) tblUsers.getValueAt(selectedRow, 2)).equals(PropertiesController.getLangValue("yes")); //online
            
            //No podrá eliminar al usuario SYSADMIN, al propio usuario o a un usuario online
            if(!user.equals("SYSADMIN") && !user.equals(myUser.getUsername()) && !online){
                btnDeleteUser.setEnabled(true);
                btnNewPassword.setEnabled(true);
            }else{
                btnDeleteUser.setEnabled(false);
                btnNewPassword.setEnabled(false);
            }
        }
    }//GEN-LAST:event_tblUsersMouseClicked

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed
        //recargar la tabla por si el estado del usuario ha cambiado
        fillUserTable(createTableModel()); 
        //pedir confirmacion de eliminacion
        MsgConfirmation msgCon = new MsgConfirmation(this, true, PropertiesController.getLangValue("confirm_delete_user"));
        msgCon.setVisible(true);
        if(msgCon.isConfirmed()){
            //Comprobar si esta online (de nuevo)
            if(((String) tblUsers.getValueAt(selectedRow, 2)).equals(PropertiesController.getLangValue("yes"))){
                MsgBox.create(this, PropertiesController.getLangValue("error_connected_user"), MsgBox.ERROR_ICON).setVisible(true);
            }else{
                //eliminar usuario seleccionado
                int idUser = (int) tblUsers.getValueAt(selectedRow, 0);
                myUser.getDao().deleteUser(idUser);
            }
        }
        //reiniciar selected index y recargar tabla
        selectedRow = -1;
        btnDeleteUser.setEnabled(false);
        btnNewPassword.setEnabled(false);
        tblUsers.clearSelection();
        fillUserTable(createTableModel());
    }//GEN-LAST:event_btnDeleteUserActionPerformed

    private void btnUpdateListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateListActionPerformed
        selectedRow = -1;
        btnDeleteUser.setEnabled(false);
        btnNewPassword.setEnabled(false);
        tblUsers.clearSelection();
        fillUserTable(createTableModel());
    }//GEN-LAST:event_btnUpdateListActionPerformed

    private void btnCreateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateUserActionPerformed
        CreateUserGUI cuGui = new CreateUserGUI(this, myUser, true);
        cuGui.setVisible(true);
        fillUserTable(createTableModel());
    }//GEN-LAST:event_btnCreateUserActionPerformed

    private void btnNewPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewPasswordActionPerformed
        myUser.getDao().generateNewPassword((int) tblUsers.getValueAt(selectedRow, 0));
        this.btnUpdateList.doClick();
    }//GEN-LAST:event_btnNewPasswordActionPerformed

    private DefaultTableModel createTableModel(){
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn(PropertiesController.getLangValue("userid"));
        model.addColumn(PropertiesController.getLangValue("username"));
        model.addColumn(PropertiesController.getLangValue("online"));
        model.addColumn(PropertiesController.getLangValue("role"));
        model.addColumn(PropertiesController.getLangValue("lastconnection"));
        
        return model;
    }
    
    private void fillUserTable(DefaultTableModel model){
        //recoge datos de usuarios del servidor
        LinkedList<RegistredUser> users = myUser.getDao().getUsersList();
        //añade los datos al table model
        for(int i = 0; i < users.size(); i++){
            String onlineValue = "";
            if(users.get(i).isOnline())
                onlineValue = PropertiesController.getLangValue("yes");
            else
                onlineValue = PropertiesController.getLangValue("no");
                
            Object[] rowData = new Object[]{
                users.get(i).getIdUser(),
                users.get(i).getUsername(),
                onlineValue,
                users.get(i).getRole(),
                new SimpleDateFormat("dd-MM-yyyy HH:mm:ss").format(users.get(i).getLastConnection())
            };
            model.addRow(rowData);
        }
        //asigna el table model a la tabla
        this.tblUsers.setModel(model);
    }
    
    private void setLanguageUI(){
        this.lblAdminUsers.setText(PropertiesController.getLangValue("administrateusers"));
        this.btnCreateUser.setText(PropertiesController.getLangValue("createuser"));
        this.btnDeleteUser.setText(PropertiesController.getLangValue("deleteuser"));
        this.btnNewPassword.setText(PropertiesController.getLangValue("newpassword"));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminUsersGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminUsersGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminUsersGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminUsersGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminUsersGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MainPanel;
    private RSMaterialComponent.RSButtonIconOne btnClose;
    private RSMaterialComponent.RSButtonMaterialIconOne btnCreateUser;
    private RSMaterialComponent.RSButtonMaterialIconOne btnDeleteUser;
    private RSMaterialComponent.RSButtonMaterialIconOne btnNewPassword;
    private RSMaterialComponent.RSButtonIconOne btnUpdateList;
    private javax.swing.JScrollPane jScrollPane1;
    private RSMaterialComponent.RSLabelTextIcon lblAdminUsers;
    private RSMaterialComponent.RSTableMetroCustom tblUsers;
    // End of variables declaration//GEN-END:variables
}
