
-- validate sale comprueba que no se venden mas unidades de las disponibles y actualiza el stock en productos
CREATE TRIGGER IF NOT EXISTS VALIDATE_SALE 
BEFORE INSERT ON SALES
BEGIN
	SELECT RAISE(ABORT, 'CAN_T SELL MORE THAN AVAILABLE')
	WHERE EXISTS (SELECT 1 FROM PRODUCTS WHERE NEW.UNITS > PRODUCTS.STOCK AND NEW.IDPRODUCT = PRODUCTS.IDPRODUCT);

	UPDATE PRODUCTS SET STOCK=(SELECT PRODUCTS.STOCK-NEW.UNITS FROM PRODUCTS WHERE PRODUCTS.IDPRODUCT=NEW.IDPRODUCT);
END;

--auto order sobre productos:

CREATE TRIGGER IF NOT EXISTS AUTO_ORDER
AFTER UPDATE OF STOCK ON PRODUCTS
WHEN NEW.STOCK <= OLD.SECURITYSTOCK AND (SELECT 1 FROM ORDERS WHERE IDPRODUCT=NEW.IDPRODUCT AND CONFIRMED=FALSE) <> 1
BEGIN 
	INSERT INTO ORDERS (IDPRODUCT, ORDERDATE, UNITS) 
	VALUES (NEW.IDPRODUCT, date('now'), 
	(SELECT DEFAULTORDERAMOUNT FROM PRODUCTS
	WHERE PRODUCTS.IDPRODUCT=NEW.IDPRODUCT AND DEFAULTORDERAMOUNT > 0 ));
END;

-- validate order comprueba si el existe un pedido anterior sin confirmar

CREATE TRIGGER IF NOT EXISTS VALIDATE_ORDER
AFTER INSERT ON ORDERS
BEGIN
	SELECT RAISE(IGNORE)
	WHERE EXISTS (SELECT 1 FROM ORDERS WHERE IDPRODUCT=NEW.IDPRODUCT AND CONFIRMED=FALSE);
END;

-- confirmed order actualiza el stock de un producto cuando se confirma un pedido

CREATE TRIGGER IF NOT EXISTS CONFIRMED_ORDER
AFTER UPDATE OF CONFIRMED ON ORDERS
BEGIN
	UPDATE PRODUCTS SET STOCK = STOCK + OLD.UNITS WHERE PRODUCTS.IDPRODUCT = OLD.IDPRODUCT;
END;